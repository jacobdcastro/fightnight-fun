{"abi":[{"type":"function","name":"ccipReceive","inputs":[{"name":"message","type":"tuple","internalType":"struct Client.Any2EVMMessage","components":[{"name":"messageId","type":"bytes32","internalType":"bytes32"},{"name":"sourceChainSelector","type":"uint64","internalType":"uint64"},{"name":"sender","type":"bytes","internalType":"bytes"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"destTokenAmounts","type":"tuple[]","internalType":"struct Client.EVMTokenAmount[]","components":[{"name":"token","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}]}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getRouter","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"supportsInterface","inputs":[{"name":"interfaceId","type":"bytes4","internalType":"bytes4"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"error","name":"InvalidRouter","inputs":[{"name":"router","type":"address","internalType":"address"}]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))":"85572ffb","getRouter()":"b0f479a1","supportsInterface(bytes4)":"01ffc9a7"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"}],\"name\":\"InvalidRouter\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"messageId\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"sourceChainSelector\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"sender\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Client.EVMTokenAmount[]\",\"name\":\"destTokenAmounts\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Client.Any2EVMMessage\",\"name\":\"message\",\"type\":\"tuple\"}],\"name\":\"ccipReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))\":{\"details\":\"Note ensure you check the msg.sender is the OffRampRouter\",\"params\":{\"message\":\"CCIP Message\"}},\"getRouter()\":{\"returns\":{\"_0\":\"CCIP router address\"}},\"supportsInterface(bytes4)\":{\"details\":\"Should indicate whether the contract implements IAny2EVMMessageReceiver e.g. return interfaceId == type(IAny2EVMMessageReceiver).interfaceId || interfaceId == type(IERC165).interfaceId This allows CCIP to check if ccipReceive is available before calling it. If this returns false or reverts, only tokens are transferred to the receiver. If this returns true, tokens are transferred and ccipReceive is called atomically. Additionally, if the receiver address does not have code associated with it at the time of execution (EXTCODESIZE returns 0), only tokens will be transferred.\",\"params\":{\"interfaceId\":\"The interfaceId to check\"},\"returns\":{\"_0\":\"true if the interfaceId is supported\"}}},\"title\":\"CCIPReceiver - Base contract for CCIP applications that can receive messages.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))\":{\"notice\":\"Called by the Router to deliver a message. If this reverts, any token transfers also revert. The message will move to a FAILED state and become available for manual execution.\"},\"getRouter()\":{\"notice\":\"Return the current router\"},\"supportsInterface(bytes4)\":{\"notice\":\"IERC165 supports an interfaceId\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol\":\"CCIPReceiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/contracts-ccip/=node_modules/@chainlink/contracts-ccip/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@pythnetwork/pyth-sdk-solidity/=node_modules/@pythnetwork/pyth-sdk-solidity/\"],\"viaIR\":true},\"sources\":{\"node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol\":{\"keccak256\":\"0x23827b8b1cd9f1d7886720ab0347d34891c4a584dc9ee048b85a41dc2241917f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36de1af7a5a8bee82e009e11d82ae908cc49369e470e2fd09e0f3dc1636daa99\",\"dweb:/ipfs/QmQigXBWez6ZxxMAXB9sjQ86wEnTnB1hmbMcm9wrpcmDK9\"]},\"node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IAny2EVMMessageReceiver.sol\":{\"keccak256\":\"0xd2a05a4f58a453cbf8cfa6aa78f58cb8e42091b3a025f711a0aa51f584e16b48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3bb4ca50612b0150a29b9ea7c82f6228914ff54716584541bad5c0259e8fa33\",\"dweb:/ipfs/QmTnqhNtBD9bUmqVaR4YHkWrBUdSGHV3DXAgrTM193PGkH\"]},\"node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol\":{\"keccak256\":\"0x8af3ac1085c87342373772fb1a0107c7b90258e6bfed318ab2a601a14477e679\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://14395fefc8310c9a355262359c8f51036f83c004982fb600164c2a007629f81e\",\"dweb:/ipfs/QmeCLr8a5bDVyLQm8v947ULgV4CZmUeQPjVyWixzieBD5o\"]},\"node_modules/@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.3/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xa36a31b4bb17fad88d023474893b3b895fa421650543b1ce5aefc78efbd43244\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f235b9175d95111f301d729566e214c32559e55a2b0579c947484748e20679d\",\"dweb:/ipfs/QmSsNBuPejy1wNe2u3JSt2p9wFhrjvBjFrnAaNe1nDNkEA\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"router","type":"address"}],"type":"error","name":"InvalidRouter"},{"inputs":[{"internalType":"struct Client.Any2EVMMessage","name":"message","type":"tuple","components":[{"internalType":"bytes32","name":"messageId","type":"bytes32"},{"internalType":"uint64","name":"sourceChainSelector","type":"uint64"},{"internalType":"bytes","name":"sender","type":"bytes"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"struct Client.EVMTokenAmount[]","name":"destTokenAmounts","type":"tuple[]","components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}]}]}],"stateMutability":"nonpayable","type":"function","name":"ccipReceive"},{"inputs":[],"stateMutability":"view","type":"function","name":"getRouter","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"stateMutability":"pure","type":"function","name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}]}],"devdoc":{"kind":"dev","methods":{"ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))":{"details":"Note ensure you check the msg.sender is the OffRampRouter","params":{"message":"CCIP Message"}},"getRouter()":{"returns":{"_0":"CCIP router address"}},"supportsInterface(bytes4)":{"details":"Should indicate whether the contract implements IAny2EVMMessageReceiver e.g. return interfaceId == type(IAny2EVMMessageReceiver).interfaceId || interfaceId == type(IERC165).interfaceId This allows CCIP to check if ccipReceive is available before calling it. If this returns false or reverts, only tokens are transferred to the receiver. If this returns true, tokens are transferred and ccipReceive is called atomically. Additionally, if the receiver address does not have code associated with it at the time of execution (EXTCODESIZE returns 0), only tokens will be transferred.","params":{"interfaceId":"The interfaceId to check"},"returns":{"_0":"true if the interfaceId is supported"}}},"version":1},"userdoc":{"kind":"user","methods":{"ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))":{"notice":"Called by the Router to deliver a message. If this reverts, any token transfers also revert. The message will move to a FAILED state and become available for manual execution."},"getRouter()":{"notice":"Return the current router"},"supportsInterface(bytes4)":{"notice":"IERC165 supports an interfaceId"}},"version":1}},"settings":{"remappings":["@chainlink/contracts-ccip/=node_modules/@chainlink/contracts-ccip/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@pythnetwork/pyth-sdk-solidity/=node_modules/@pythnetwork/pyth-sdk-solidity/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol":"CCIPReceiver"},"evmVersion":"paris","libraries":{},"viaIR":true},"sources":{"node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol":{"keccak256":"0x23827b8b1cd9f1d7886720ab0347d34891c4a584dc9ee048b85a41dc2241917f","urls":["bzz-raw://36de1af7a5a8bee82e009e11d82ae908cc49369e470e2fd09e0f3dc1636daa99","dweb:/ipfs/QmQigXBWez6ZxxMAXB9sjQ86wEnTnB1hmbMcm9wrpcmDK9"],"license":"MIT"},"node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IAny2EVMMessageReceiver.sol":{"keccak256":"0xd2a05a4f58a453cbf8cfa6aa78f58cb8e42091b3a025f711a0aa51f584e16b48","urls":["bzz-raw://e3bb4ca50612b0150a29b9ea7c82f6228914ff54716584541bad5c0259e8fa33","dweb:/ipfs/QmTnqhNtBD9bUmqVaR4YHkWrBUdSGHV3DXAgrTM193PGkH"],"license":"MIT"},"node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol":{"keccak256":"0x8af3ac1085c87342373772fb1a0107c7b90258e6bfed318ab2a601a14477e679","urls":["bzz-raw://14395fefc8310c9a355262359c8f51036f83c004982fb600164c2a007629f81e","dweb:/ipfs/QmeCLr8a5bDVyLQm8v947ULgV4CZmUeQPjVyWixzieBD5o"],"license":"MIT"},"node_modules/@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.3/contracts/utils/introspection/IERC165.sol":{"keccak256":"0xa36a31b4bb17fad88d023474893b3b895fa421650543b1ce5aefc78efbd43244","urls":["bzz-raw://0f235b9175d95111f301d729566e214c32559e55a2b0579c947484748e20679d","dweb:/ipfs/QmSsNBuPejy1wNe2u3JSt2p9wFhrjvBjFrnAaNe1nDNkEA"],"license":"MIT"}},"version":1},"storageLayout":{"storage":[],"types":{}},"ast":{"absolutePath":"node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol","id":36452,"exportedSymbols":{"CCIPReceiver":[36451],"Client":[36572],"IAny2EVMMessageReceiver":[36464],"IERC165":[37525]},"nodeType":"SourceUnit","src":"32:2479:25","nodes":[{"id":36333,"nodeType":"PragmaDirective","src":"32:23:25","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":36335,"nodeType":"ImportDirective","src":"57:82:25","nodes":[],"absolutePath":"node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IAny2EVMMessageReceiver.sol","file":"../interfaces/IAny2EVMMessageReceiver.sol","nameLocation":"-1:-1:-1","scope":36452,"sourceUnit":36465,"symbolAliases":[{"foreign":{"id":36334,"name":"IAny2EVMMessageReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":36464,"src":"65:23:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":36337,"nodeType":"ImportDirective","src":"141:47:25","nodes":[],"absolutePath":"node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol","file":"../libraries/Client.sol","nameLocation":"-1:-1:-1","scope":36452,"sourceUnit":36573,"symbolAliases":[{"foreign":{"id":36336,"name":"Client","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":36572,"src":"149:6:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":36339,"nodeType":"ImportDirective","src":"190:108:25","nodes":[],"absolutePath":"node_modules/@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.3/contracts/utils/introspection/IERC165.sol","file":"../../vendor/openzeppelin-solidity/v4.8.3/contracts/utils/introspection/IERC165.sol","nameLocation":"-1:-1:-1","scope":36452,"sourceUnit":37526,"symbolAliases":[{"foreign":{"id":36338,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":37525,"src":"198:7:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":36451,"nodeType":"ContractDefinition","src":"389:2121:25","nodes":[{"id":36346,"nodeType":"VariableDeclaration","src":"460:39:25","nodes":[],"constant":false,"mutability":"immutable","name":"i_ccipRouter","nameLocation":"487:12:25","scope":36451,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36345,"name":"address","nodeType":"ElementaryTypeName","src":"460:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"id":36370,"nodeType":"FunctionDefinition","src":"504:124:25","nodes":[],"body":{"id":36369,"nodeType":"Block","src":"532:96:25","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":36356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":36351,"name":"router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":36348,"src":"542:6:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":36354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"560:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":36353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"552:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":36352,"name":"address","nodeType":"ElementaryTypeName","src":"552:7:25","typeDescriptions":{}}},"id":36355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"552:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"542:20:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":36364,"nodeType":"IfStatement","src":"538:58:25","trueBody":{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":36360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"593:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":36359,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"585:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":36358,"name":"address","nodeType":"ElementaryTypeName","src":"585:7:25","typeDescriptions":{}}},"id":36361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"585:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36357,"name":"InvalidRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":36432,"src":"571:13:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":36362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"571:25:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":36363,"nodeType":"RevertStatement","src":"564:32:25"}},{"expression":{"id":36367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":36365,"name":"i_ccipRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":36346,"src":"602:12:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":36366,"name":"router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":36348,"src":"617:6:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"602:21:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":36368,"nodeType":"ExpressionStatement","src":"602:21:25"}]},"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","parameters":{"id":36349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":36348,"mutability":"mutable","name":"router","nameLocation":"524:6:25","nodeType":"VariableDeclaration","scope":36370,"src":"516:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36347,"name":"address","nodeType":"ElementaryTypeName","src":"516:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"515:16:25"},"returnParameters":{"id":36350,"nodeType":"ParameterList","parameters":[],"src":"532:0:25"},"scope":36451,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":36394,"nodeType":"FunctionDefinition","src":"1405:209:25","nodes":[],"body":{"id":36393,"nodeType":"Block","src":"1496:118:25","nodes":[],"statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":36391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":36384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":36379,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":36373,"src":"1509:11:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":36381,"name":"IAny2EVMMessageReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":36464,"src":"1529:23:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAny2EVMMessageReceiver_$36464_$","typeString":"type(contract IAny2EVMMessageReceiver)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAny2EVMMessageReceiver_$36464_$","typeString":"type(contract IAny2EVMMessageReceiver)"}],"id":36380,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1524:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":36382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1524:29:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAny2EVMMessageReceiver_$36464","typeString":"type(contract IAny2EVMMessageReceiver)"}},"id":36383,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1554:11:25","memberName":"interfaceId","nodeType":"MemberAccess","src":"1524:41:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1509:56:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":36390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":36385,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":36373,"src":"1569:11:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":36387,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":37525,"src":"1589:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$37525_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$37525_$","typeString":"type(contract IERC165)"}],"id":36386,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1584:4:25","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":36388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1584:13:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$37525","typeString":"type(contract IERC165)"}},"id":36389,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1598:11:25","memberName":"interfaceId","nodeType":"MemberAccess","src":"1584:25:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1569:40:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1509:100:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":36378,"id":36392,"nodeType":"Return","src":"1502:107:25"}]},"baseFunctions":[37524],"documentation":{"id":36371,"nodeType":"StructuredDocumentation","src":"632:770:25","text":"@notice IERC165 supports an interfaceId\n @param interfaceId The interfaceId to check\n @return true if the interfaceId is supported\n @dev Should indicate whether the contract implements IAny2EVMMessageReceiver\n e.g. return interfaceId == type(IAny2EVMMessageReceiver).interfaceId || interfaceId == type(IERC165).interfaceId\n This allows CCIP to check if ccipReceive is available before calling it.\n If this returns false or reverts, only tokens are transferred to the receiver.\n If this returns true, tokens are transferred and ccipReceive is called atomically.\n Additionally, if the receiver address does not have code associated with\n it at the time of execution (EXTCODESIZE returns 0), only tokens will be transferred."},"functionSelector":"01ffc9a7","implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1414:17:25","overrides":{"id":36375,"nodeType":"OverrideSpecifier","overrides":[],"src":"1472:8:25"},"parameters":{"id":36374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":36373,"mutability":"mutable","name":"interfaceId","nameLocation":"1439:11:25","nodeType":"VariableDeclaration","scope":36394,"src":"1432:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":36372,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1432:6:25","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1431:20:25"},"returnParameters":{"id":36378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":36377,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":36394,"src":"1490:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":36376,"name":"bool","nodeType":"ElementaryTypeName","src":"1490:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1489:6:25"},"scope":36451,"stateMutability":"pure","virtual":true,"visibility":"public"},{"id":36409,"nodeType":"FunctionDefinition","src":"1660:130:25","nodes":[],"body":{"id":36408,"nodeType":"Block","src":"1758:32:25","nodes":[],"statements":[{"expression":{"arguments":[{"id":36405,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":36398,"src":"1777:7:25","typeDescriptions":{"typeIdentifier":"t_struct$_Any2EVMMessage_$36537_calldata_ptr","typeString":"struct Client.Any2EVMMessage calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Any2EVMMessage_$36537_calldata_ptr","typeString":"struct Client.Any2EVMMessage calldata"}],"id":36404,"name":"_ccipReceive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":36416,"src":"1764:12:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Any2EVMMessage_$36537_memory_ptr_$returns$__$","typeString":"function (struct Client.Any2EVMMessage memory)"}},"id":36406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1764:21:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":36407,"nodeType":"ExpressionStatement","src":"1764:21:25"}]},"baseFunctions":[36463],"documentation":{"id":36395,"nodeType":"StructuredDocumentation","src":"1618:39:25","text":"@inheritdoc IAny2EVMMessageReceiver"},"functionSelector":"85572ffb","implemented":true,"kind":"function","modifiers":[{"id":36402,"kind":"modifierInvocation","modifierName":{"id":36401,"name":"onlyRouter","nameLocations":["1747:10:25"],"nodeType":"IdentifierPath","referencedDeclaration":36450,"src":"1747:10:25"},"nodeType":"ModifierInvocation","src":"1747:10:25"}],"name":"ccipReceive","nameLocation":"1669:11:25","overrides":{"id":36400,"nodeType":"OverrideSpecifier","overrides":[],"src":"1738:8:25"},"parameters":{"id":36399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":36398,"mutability":"mutable","name":"message","nameLocation":"1712:7:25","nodeType":"VariableDeclaration","scope":36409,"src":"1681:38:25","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Any2EVMMessage_$36537_calldata_ptr","typeString":"struct Client.Any2EVMMessage"},"typeName":{"id":36397,"nodeType":"UserDefinedTypeName","pathNode":{"id":36396,"name":"Client.Any2EVMMessage","nameLocations":["1681:6:25","1688:14:25"],"nodeType":"IdentifierPath","referencedDeclaration":36537,"src":"1681:21:25"},"referencedDeclaration":36537,"src":"1681:21:25","typeDescriptions":{"typeIdentifier":"t_struct$_Any2EVMMessage_$36537_storage_ptr","typeString":"struct Client.Any2EVMMessage"}},"visibility":"internal"}],"src":"1680:40:25"},"returnParameters":{"id":36403,"nodeType":"ParameterList","parameters":[],"src":"1758:0:25"},"scope":36451,"stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"id":36416,"nodeType":"FunctionDefinition","src":"1891:77:25","nodes":[],"documentation":{"id":36410,"nodeType":"StructuredDocumentation","src":"1794:94:25","text":"@notice Override this function in your implementation.\n @param message Any2EVMMessage"},"implemented":false,"kind":"function","modifiers":[],"name":"_ccipReceive","nameLocation":"1900:12:25","parameters":{"id":36414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":36413,"mutability":"mutable","name":"message","nameLocation":"1942:7:25","nodeType":"VariableDeclaration","scope":36416,"src":"1913:36:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Any2EVMMessage_$36537_memory_ptr","typeString":"struct Client.Any2EVMMessage"},"typeName":{"id":36412,"nodeType":"UserDefinedTypeName","pathNode":{"id":36411,"name":"Client.Any2EVMMessage","nameLocations":["1913:6:25","1920:14:25"],"nodeType":"IdentifierPath","referencedDeclaration":36537,"src":"1913:21:25"},"referencedDeclaration":36537,"src":"1913:21:25","typeDescriptions":{"typeIdentifier":"t_struct$_Any2EVMMessage_$36537_storage_ptr","typeString":"struct Client.Any2EVMMessage"}},"visibility":"internal"}],"src":"1912:38:25"},"returnParameters":{"id":36415,"nodeType":"ParameterList","parameters":[],"src":"1967:0:25"},"scope":36451,"stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"id":36428,"nodeType":"FunctionDefinition","src":"2205:90:25","nodes":[],"body":{"id":36427,"nodeType":"Block","src":"2256:39:25","nodes":[],"statements":[{"expression":{"arguments":[{"id":36424,"name":"i_ccipRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":36346,"src":"2277:12:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36423,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2269:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":36422,"name":"address","nodeType":"ElementaryTypeName","src":"2269:7:25","typeDescriptions":{}}},"id":36425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2269:21:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":36421,"id":36426,"nodeType":"Return","src":"2262:28:25"}]},"documentation":{"id":36417,"nodeType":"StructuredDocumentation","src":"2131:71:25","text":"@notice Return the current router\n @return CCIP router address"},"functionSelector":"b0f479a1","implemented":true,"kind":"function","modifiers":[],"name":"getRouter","nameLocation":"2214:9:25","parameters":{"id":36418,"nodeType":"ParameterList","parameters":[],"src":"2223:2:25"},"returnParameters":{"id":36421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":36420,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":36428,"src":"2247:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36419,"name":"address","nodeType":"ElementaryTypeName","src":"2247:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2246:9:25"},"scope":36451,"stateMutability":"view","virtual":false,"visibility":"public"},{"id":36432,"nodeType":"ErrorDefinition","src":"2299:36:25","nodes":[],"errorSelector":"d7f73334","name":"InvalidRouter","nameLocation":"2305:13:25","parameters":{"id":36431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":36430,"mutability":"mutable","name":"router","nameLocation":"2327:6:25","nodeType":"VariableDeclaration","scope":36432,"src":"2319:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36429,"name":"address","nodeType":"ElementaryTypeName","src":"2319:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2318:16:25"}},{"id":36450,"nodeType":"ModifierDefinition","src":"2395:113:25","nodes":[],"body":{"id":36449,"nodeType":"Block","src":"2417:91:25","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":36441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":36435,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2427:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":36436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2431:6:25","memberName":"sender","nodeType":"MemberAccess","src":"2427:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":36439,"name":"i_ccipRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":36346,"src":"2449:12:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36438,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2441:7:25","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":36437,"name":"address","nodeType":"ElementaryTypeName","src":"2441:7:25","typeDescriptions":{}}},"id":36440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2441:21:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2427:35:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":36447,"nodeType":"IfStatement","src":"2423:73:25","trueBody":{"errorCall":{"arguments":[{"expression":{"id":36443,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2485:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":36444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2489:6:25","memberName":"sender","nodeType":"MemberAccess","src":"2485:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36442,"name":"InvalidRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":36432,"src":"2471:13:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":36445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2471:25:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":36446,"nodeType":"RevertStatement","src":"2464:32:25"}},{"id":36448,"nodeType":"PlaceholderStatement","src":"2502:1:25"}]},"documentation":{"id":36433,"nodeType":"StructuredDocumentation","src":"2339:53:25","text":"@dev only calls from the set router are accepted."},"name":"onlyRouter","nameLocation":"2404:10:25","parameters":{"id":36434,"nodeType":"ParameterList","parameters":[],"src":"2414:2:25"},"virtual":false,"visibility":"internal"}],"abstract":true,"baseContracts":[{"baseName":{"id":36341,"name":"IAny2EVMMessageReceiver","nameLocations":["423:23:25"],"nodeType":"IdentifierPath","referencedDeclaration":36464,"src":"423:23:25"},"id":36342,"nodeType":"InheritanceSpecifier","src":"423:23:25"},{"baseName":{"id":36343,"name":"IERC165","nameLocations":["448:7:25"],"nodeType":"IdentifierPath","referencedDeclaration":37525,"src":"448:7:25"},"id":36344,"nodeType":"InheritanceSpecifier","src":"448:7:25"}],"canonicalName":"CCIPReceiver","contractDependencies":[],"contractKind":"contract","documentation":{"id":36340,"nodeType":"StructuredDocumentation","src":"300:89:25","text":"@title CCIPReceiver - Base contract for CCIP applications that can receive messages."},"fullyImplemented":false,"linearizedBaseContracts":[36451,37525,36464],"name":"CCIPReceiver","nameLocation":"407:12:25","scope":36452,"usedErrors":[36432],"usedEvents":[]}],"license":"MIT"},"id":25}